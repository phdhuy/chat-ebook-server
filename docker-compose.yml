version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-chat-ebook
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: chat-ebook
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: duchuy
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - chat-ebook-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-chat-ebook
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15674:15674"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/data
    networks:
      - chat-ebook-network
    command: >
      sh -c "rabbitmq-plugins enable --offline rabbitmq_web_stomp &&
             rabbitmq-plugins enable --offline rabbitmq_stomp &&
             rabbitmq-server"

  redis:
    image: redis:latest
    container_name: redis-chat-ebook
    hostname: redis
    ports:
      - "6380:6379"
    networks:
      - chat-ebook-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-app-chat-ebook
    links:
      - postgres
      - rabbitmq
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chat-ebook
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: duchuy
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - chat-ebook-network

  nginx:
    image: nginx:latest
    container_name: nginx-chat-ebook
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - chat-ebook-network

  loki:
    image: grafana/loki:2.9.0
    container_name: loki-chat-ebook
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - chat-ebook-network

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - chat-ebook-network

volumes:
  postgres-data:
  rabbitmq-data:

networks:
  chat-ebook-network:
    driver: bridge
    name: chat-ebook-network